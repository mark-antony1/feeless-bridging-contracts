{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExample",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506104048061002d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e4146100515780633f5a4a2a14610053578063ba414fa61461005b578063fa7626d414610077575b600080fd5b005b610051610086565b610063610090565b604051901515815260200160405180910390f35b6000546100639060ff1681565b565b61008460016101bb565b60008054610100900460ff16156100b05750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156101b65760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161013e917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161039e565b60408051601f1981840301815290829052610158916103c2565b6000604051808303816000865af19150503d8060008114610195576040519150601f19603f3d011682016040523d82523d6000602084013e61019a565b606091505b50915050808060200190518101906101b2919061033e565b9150505b919050565b8061022f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161021f9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a161022f610232565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561032d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526102cc929160200161039e565b60408051601f19818403018152908290526102e6916103c2565b6000604051808303816000865af19150503d8060008114610323576040519150601f19603f3d011682016040523d82523d6000602084013e610328565b606091505b505050505b6000805461ff001916610100179055565b60006020828403121561034f578081fd5b8151801515811461035e578182fd5b9392505050565b60008151815b81811015610385576020818501810151868301520161036b565b818111156103935782828601525b509290920192915050565b6001600160e01b03198316815260006103ba6004830184610365565b949350505050565b600061035e828461036556fea26469706673582212207a17169fbc25bd4d4800541425a9b9971c2bbef2f8676b167c570d8003d2c20964736f6c63430008040033",
    "sourceMap": "91:135:14:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;91:135:14;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e4146100515780633f5a4a2a14610053578063ba414fa61461005b578063fa7626d414610077575b600080fd5b005b610051610086565b610063610090565b604051901515815260200160405180910390f35b6000546100639060ff1681565b565b61008460016101bb565b60008054610100900460ff16156100b05750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156101b65760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161013e917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161039e565b60408051601f1981840301815290829052610158916103c2565b6000604051808303816000865af19150503d8060008114610195576040519150601f19603f3d011682016040523d82523d6000602084013e61019a565b606091505b50915050808060200190518101906101b2919061033e565b9150505b919050565b8061022f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161021f9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a161022f610232565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561032d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526102cc929160200161039e565b60408051601f19818403018152908290526102e6916103c2565b6000604051808303816000865af19150503d8060008114610323576040519150601f19603f3d011682016040523d82523d6000602084013e610328565b606091505b505050505b6000805461ff001916610100179055565b60006020828403121561034f578081fd5b8151801515811461035e578182fd5b9392505050565b60008151815b81811015610385576020818501810151868301520161036b565b818111156103935782828601525b509290920192915050565b6001600160e01b03198316815260006103ba6004830184610365565b949350505050565b600061035e828461036556fea26469706673582212207a17169fbc25bd4d4800541425a9b9971c2bbef2f8676b167c570d8003d2c20964736f6c63430008040033",
    "sourceMap": "91:135:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;129:26;;161:63;;;:::i;1819:584:0:-;;;:::i;:::-;;;1932:14:15;;1925:22;1907:41;;1895:2;1880:18;1819:584:0;;;;;;;1572:26;;;;;;;;;129::14;:::o;161:63::-;201:16;212:4;201:10;:16::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;1312:51:15;;;-1:-1:-1;;;1379:18:15;;;1372:34;2196:43:0;;;;;;;;;1285:18:15;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;1980:374;;2374:12;1819:584;-1:-1:-1;1819:584:0:o;3255:157::-;3315:9;3310:96;;3345:30;;;;;2161:2:15;2143:21;;;2200:2;2180:18;;;2173:30;2239:25;2234:2;2219:18;;2212:53;2297:2;2282:18;;2133:173;3345:30:0;;;;;;;;3389:6;:4;:6::i;:::-;3255:157;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;1619:51:15;;;-1:-1:-1;;;1686:18:15;;;1679:34;;;;2705:4:0;1729:18:15;;;1722:34;2482:11:0;;1671:64;2579:43;;1592:18:15;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;14:297:15:-;81:6;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;192:9;186:16;245:5;238:13;231:21;224:5;221:32;211:2;;272:6;264;257:22;211:2;300:5;92:219;-1:-1:-1;;;92:219:15:o;316:340::-;357:3;395:5;389:12;419:3;431:128;445:6;442:1;439:13;431:128;;;542:4;527:13;;;523:24;;517:31;504:11;;;497:52;460:12;431:128;;;577:6;574:1;571:13;568:2;;;612:3;603:6;598:3;594:16;587:29;568:2;-1:-1:-1;634:16:15;;;;;365:291;-1:-1:-1;;365:291:15:o;661:278::-;-1:-1:-1;;;;;;846:33:15;;834:46;;816:3;896:37;930:1;921:11;;913:6;896:37;:::i;:::-;889:44;824:115;-1:-1:-1;;;;824:115:15:o;944:189::-;1073:3;1098:29;1123:3;1115:6;1098:29;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testExample()": "3f5a4a2a"
  },
  "ast": {
    "absolutePath": "src/test/Contract.t.sol",
    "id": 3413,
    "exportedSymbols": {
      "ContractTest": [
        3412
      ],
      "DSTest": [
        1786
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:188:14",
    "nodes": [
      {
        "id": 3396,
        "nodeType": "PragmaDirective",
        "src": "39:22:14",
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 3397,
        "nodeType": "ImportDirective",
        "src": "63:26:14",
        "absolutePath": "lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3413,
        "sourceUnit": 1787,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3412,
        "nodeType": "ContractDefinition",
        "src": "91:135:14",
        "nodes": [
          {
            "id": 3403,
            "nodeType": "FunctionDefinition",
            "src": "129:26:14",
            "body": {
              "id": 3402,
              "nodeType": "Block",
              "src": "153:2:14",
              "statements": []
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "138:5:14",
            "parameters": {
              "id": 3400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "143:2:14"
            },
            "returnParameters": {
              "id": 3401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "153:0:14"
            },
            "scope": 3412,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3411,
            "nodeType": "FunctionDefinition",
            "src": "161:63:14",
            "body": {
              "id": 3410,
              "nodeType": "Block",
              "src": "191:33:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 3407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "212:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3406,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "201:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 3408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "201:16:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3409,
                  "nodeType": "ExpressionStatement",
                  "src": "201:16:14"
                }
              ]
            },
            "functionSelector": "3f5a4a2a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExample",
            "nameLocation": "170:11:14",
            "parameters": {
              "id": 3404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "181:2:14"
            },
            "returnParameters": {
              "id": 3405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "191:0:14"
            },
            "scope": 3412,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3398,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1786,
              "src": "116:6:14"
            },
            "id": 3399,
            "nodeType": "InheritanceSpecifier",
            "src": "116:6:14"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3412,
          1786
        ],
        "name": "ContractTest",
        "nameLocation": "100:12:14",
        "scope": 3413,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 14
}